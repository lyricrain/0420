커뮤니티 시스템 ( 커뮤니티 게시판 )

**요구사항**
회원제 커뮤니티 게시판 
비로그인 상태에서는 게시판의 리스트 정보만 제공한다 
메인 화면 상단부에는 로그인 할 수 있는 폼이 제공된다 

리스트에서는 게시물번호, 제목 , 작성자명 , 작성일 , 조회수가 제공된다 
리스트의 게시물은 최신 등록순으로 정렬되어 제공된다 

사용자가 로그인 하면 상단부 영역에는 로그인 폼 대신 
홈(링크) 글쓰기(링크) 회원이름 로그아웃(링크) 가 제공된다 

사용자가 로그인하면 리스트의 제목부분의 링크가 부여되어 클릭하면 게시물 상세보기가 제공된다 

상세 게시물 정보는 게시물번호, 제목 , 작성자, 작성일시(리스트에서는 작성일까지 보여줌) , 조회수, 게시물 본문내용이 제공된다 
회원 자신이 작성한 게시물에 대해서는 상세 게시물 정보 하단에 삭제와 수정버튼이 제공된다 

상단부의 로그아웃 링크를 누르면 로그아웃 하시겠습니까? 의사를 재확인한 후 확인버튼 누르면 로그아웃처리한다 
로그아웃 처리가 되면 리스트의 제목부분 링크는 비활성화된다 

상단부의 글쓰기 링크를 회원이 클릭하면 게시물 작성폼이 제공되고 제목과 본문내용을 작성해서 
글쓰기 버튼 누르면 게시글이 등록되고 게시물 리스트 화면으로 이동된다 

상세 게시물 보기 화면에 회원 자신이 작성한 게시물에 한해 삭제와 수정버튼이 제공되는 데 
삭제버튼을 누르면 게시물을 삭제하시겠습니까? 의사를 재확인한 후 삭제시키고 리스트로 이동시킨다
 
동일하게 수정버튼을 누르면 게시물을 수정하시겠습니까? 의사를 재확인한 후 수정폼을 제공한다 
수정폼은 제목과 본문내용을 수정할 수 있고 수정 후 수정하기 버튼을 누르면 수정하고 리스트로 이동시킨다 

리스트 화면에서 상세글보기를 위해 제목을 클릭해서 상세 글보기 화면 제공되는 시점에 조회수를 증가시킨다 

---- 1차 개발 요구사항 ----

===========================================================================
- 아이템 기획 , 팀빌딩 ( 역할분담 , 개발방법론-> 협업방식 및 도구 ) 

- 요구분석 : UseCase Diagram(업무분담) , UI 대략적 구성 후 업무 분석 
- 설계 : DB Modeling -> ERD 
         UI 설계 
         Class Diagram         
         File List :  Model , Controller -> class diagram 
         			 
         			  View 
         			  index.jsp : jsp forward 이용 ListController를 요청 -> 게시판 리스트가 제공 ( db 정보를 조회하기 위해 Model과 연동 ) 
         			  
         			  error.jsp : 서버 오류가 발생할 때 클라이언트에게 제공하는 웹페이지 
         			  header.jsp : 상단부 메뉴 ( 비로그인시 로그인폼 제공, 로그인시 회원명,로그아웃,글쓰기 링크 제공 ) 
         			  layout.jsp : 레이아웃 적용된 메인화면 , 다른 페이지의 템플릿 역할 ( c:import url="${url}" )
         			  
 					  css/myhome.css 
 					  
 					  member/login-fail.jsp : 로그인 실패시 alert 
 					  
 					  board/list.jsp : 게시물 리스트 , 로그인 상태일때 상세글보기 링크를 글제목에 부여         			  
					  board/post-detail.jsp : 상세글보기 
					  board/write.jsp : 글쓰기폼제공 
					  board/update.jsp : 수정폼제공
					  



- 개발환경 및 적용기술 
 개발환경 :  jdk 1.8 , WAS - ApacheTomcat 8.5 , Database - Oracle 11 xe 
 적용기술 :  javaSE ,  JDBC , SQL , Servlet/JSP , html , css , bootstrap , javascript , Ajax , UML , ERD 
 디자인패턴 : MVC , FrontController , Singleton 			   	 


- 구현 

TO DO List :   필수 라이브러리 - jstl.jar , tomcat-juli.jar  
                  class 기본 구성 -  Model : DataSourceManager - DataBase Connection Pool 을 사용하기 위한 객체  
                                                MemberVO
                                                BoardVO 
                                                MemberDAO
                                                BoardDAO 
                                                
                                      Controller : FrontControllerServlet 
                                      			   HandlerMapping
                                      			   Controller
                                      			   CheckLoginInterceptor 
                                      			    	
				  view main ui - layout.jsp 적용 
				  
				  
	             게시물리스트 	-> 로그인 , 로그아웃 		
	             
	  TO DO List :  게시물리스트 ( 로그인시 글제목에 링크 ) -> 상세글보기 -> 삭제           
				  
				  
				  
				  
				  
				  
				  
				  
				  
				  





























  